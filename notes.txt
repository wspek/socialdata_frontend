### CELERY

https://github.com/celery/celery/tree/master/examples/django
http://docs.celeryproject.org/en/latest/django/first-steps-with-django.html

# Create the Celery database tables by performing a database migrations:
$ python manage.py migrate django_celery_results

# Start a celery worker
$ celery -A website worker -l info

# Running a task
$ python ./manage.py shell
>>> from demoapp.tasks import add, mul, xsum
>>> res = add.delay(2,3)
>>> res.get()
5

celery -A website worker -l info
sudo service apache2 restart;tail -f /var/log/apache2/error.log

DAEMON:

sudo /etc/init.d/celeryd dryrun
use the output in --detach mode to run celery

OR

celery multi restart worker1

sudo easy_install supervisor
sudo pip install supervisor
echo_supervisord_conf
sudo su
echo_supervisord_conf > /etc/supervisord.conf
>>> edit supervisord.conf

Make sure pYTHONPATH is ok for root

TROUBLESHOOTING:
1) See if celery works locally:

cd /media/waldo/DATA-SHARE/Code/prj_socialdata_site;\
celery -A socialdata_site worker -l info

2) celeryd

sudo vi /etc/init.d/celeryd
sudo vi /etc/default/celeryd

ps aux | grep celery
sudo /etc/init.d/celeryd restart;ps aux | grep celery;sudo /etc/init.d/celeryd status
sudo /etc/init.d/celeryd stop;ps aux | grep celery;sudo /etc/init.d/celeryd status
sudo /etc/init.d/celeryd status
sudo /etc/init.d/celeryd dryrun
sudo /usr/bin/python -m celery worker --app=socialdata_site --time-limit=300 --loglevel=DEBUG --concurrency=8 --pidfile=/var/run/celery/worker.pid --workdir=/media/waldo/DATA-SHARE/Code/prj_socialdata_site -n worker@chief-lado --executable=/usr/bin/python;ps aux | grep celery

tail -f /var/log/celery/worker.log

3) supervisord to task manage celery

ps aux | grep supervisor
sudo vi /etc/supervisord.conf
supervisord
supervisord -n (FOR DEBUG)
supervisorctl status
supervisorctl start all
supervisorctl stop all
supervisorctl shutdown
tail -f /var/log/supervisord.log

4) Run supervisord on startup

https://serverfault.com/questions/96499/how-to-automatically-start-supervisord-on-linux-ubuntu

Startup script:

sudo vi /etc/init.d/supervisord
sudo service supervisord stop
sudo service supervisord start

ps aux | grep supervisor;ps aux | grep celery

5) systemd

cd /etc/init.d/
sudo vi /etc/init.d/supervisord
ls -l /etc/systemd/system/multi-user.target.wants
cd /etc/systemd/system/multi-user.target.wants
sudo service supervisord stop
sudo service supervisord start


sudo update-rc.d supervisord remove

sudo systemctl daemon-reload

sudo update-rc.d supervisord defaults


UITEINDELIJK:
- celeryd
- supervisor installaren
- echter

cd /etc/systemd/system/multi-user.target.wants
sudo systemctl edit --full supervisor -> aanpassen en dus ook de environment PYTHONPATH meenemen
sudo systemctl daemon-reload
sudo service supervisord start
sudo service supervisord status
succes!!!


--------------

### MYSQL setup for Django

https://www.digitalocean.com/community/tutorials/how-to-use-mysql-or-mariadb-with-your-django-application-on-ubuntu-14-04

sudo apt-get update
sudo apt-get install python-pip python-dev mysql-server libmysqlclient-dev

sudo mysql_install_db
sudo mysql_secure_installation

mysql -u root -p

Each project should have its own isolated database for security reasons.
CREATE DATABASE socialdata_site CHARACTER SET UTF8;
CREATE USER socialdata_user@localhost IDENTIFIED BY 'antisocial';
GRANT ALL PRIVILEGES ON socialdata_site.* TO socialdata_user@localhost;
FLUSH PRIVILEGES;
exit

For Django:
pip install mysqlclient

vi ~/myproject/myproject/settings.py
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'socialdata_site',
        'USER': 'socialdata_user',
        'PASSWORD': 'antisocial',
        'HOST': 'localhost',
        'PORT': '',
    }
}

cd ~/myproject
python manage.py makemigrations
python manage.py migrate
python manage.py createsuperuser -> You will be asked to select a username, provide an email address, and choose and confirm a password for the account.
python manage.py runserver 0.0.0.0:8000
http://server_domain_or_IP:8000
http://server_domain_or_IP:8000/admin
